{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/salesTable.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Paper, Button } from \"@mui/material\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\n\r\nconst SalesTable = () => {\r\n  // Datos hardcodeados para las ventas\r\n  const salesData = [\r\n    { id: 1, productName: \"Vela Aromática\", customerName: \"Juan Pérez\", total: 100, date: \"2024-12-01\", state: \"completa\" },\r\n    { id: 2, productName: \"Vela Premium\", customerName: \"María Gómez\", total: 150, date: \"2024-12-02\", state: \"pendiente\" },\r\n    { id: 3, productName: \"Vela Clásica\", customerName: \"Carlos Díaz\", total: 80, date: \"2024-12-03\", state: \"completa\" },\r\n    { id: 4, productName: \"Vela de Lavanda\", customerName: \"Ana López\", total: 120, date: \"2024-12-04\", state: \"cancelada\" },\r\n    { id: 5, productName: \"Vela de Cítricos\", customerName: \"Luis Martínez\", total: 90, date: \"2024-12-05\", state: \"pendiente\" },\r\n  ];\r\n\r\n  // Estado para controlar el filtro de ventas\r\n  const [filteredRows, setFilteredRows] = useState(salesData);\r\n\r\n  // Columnas de la tabla\r\n  const columns: GridColDef[] = [\r\n    { field: \"productName\", headerName: \"Producto\", width: 200 },\r\n    { field: \"customerName\", headerName: \"Cliente\", width: 200 },\r\n    { field: \"total\", headerName: \"Total\", width: 100 },\r\n    { field: \"date\", headerName: \"Fecha\", width: 150 },\r\n    {\r\n      field: \"state\",\r\n      headerName: \"Estado\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        let colorClass = \"\";\r\n        switch (params.value) {\r\n          case \"completa\":\r\n            colorClass = \"bg-green-500\"; // Verde\r\n            break;\r\n          case \"pendiente\":\r\n            colorClass = \"bg-yellow-500\"; // Amarillo\r\n            break;\r\n          case \"cancelada\":\r\n            colorClass = \"bg-red-500\"; // Rojo\r\n            break;\r\n          default:\r\n            colorClass = \"bg-gray-500\"; // Gris por defecto\r\n        }\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n            <span\r\n              className={`${colorClass} inline-block w-2 h-2 rounded-full`} // Usar clases Tailwind para los círculos\r\n            ></span>\r\n            <span>{params.value}</span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Función para filtrar las filas por estado\r\n  const handleFilter = (state: string) => {\r\n    const filtered = salesData.filter((sale) => sale.state === state);\r\n    setFilteredRows(filtered);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Botones para filtrar las ventas */}\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => handleFilter(\"completa\")}\r\n        sx={{\r\n          margin: 1,\r\n          backgroundColor: \"#28a745\", // Desactivar el fondo azul predeterminado de Material-UI\r\n          border: \"none\", // Eliminar cualquier borde de Material-UI\r\n        }}\r\n        className=\"bg-green-500 text-white hover:bg-green-700\"\r\n      >\r\n        Completadas\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => handleFilter(\"pendiente\")}\r\n        sx={{\r\n          margin: 1,\r\n          backgroundColor: '#ffc107', // Desactivar el fondo azul predeterminado de Material-UI\r\n          border: \"none\", // Eliminar cualquier borde de Material-UI\r\n        }}\r\n        className=\"bg-yellow-500 text-black hover:bg-yellow-700\"\r\n      >\r\n        Pendientes\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => handleFilter(\"cancelada\")}\r\n        sx={{\r\n          margin: 1,\r\n          backgroundColor: \"#dc3545\", // Desactivar el fondo azul predeterminado de Material-UI\r\n          border: \"none\", // Eliminar cualquier borde de Material-UI\r\n        }}\r\n        className=\" text-white hover:bg-red-700\"\r\n      >\r\n        Canceladas\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => setFilteredRows(salesData)}\r\n        sx={{\r\n          margin: 1,\r\n          backgroundColor: \"#d1d1d1\", // Desactivar el fondo azul predeterminado de Material-UI\r\n          border: \"none\", // Eliminar cualquier borde de Material-UI\r\n        }}\r\n        className=\"bg-gray-300 text-black hover:bg-gray-500\"\r\n      >\r\n        Mostrar Todas\r\n      </Button>\r\n\r\n      {/* Tabla de ventas */}\r\n      <Paper sx={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={filteredRows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          checkboxSelection\r\n          sx={{\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\",\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesTable;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}