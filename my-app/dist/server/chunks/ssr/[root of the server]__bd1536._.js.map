{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_ANON_KEY;\r\n\r\nconsole.log(\"Supabase URL:\", supabaseUrl);\r\nconsole.log(\"Supabase Key:\", supabaseKey ? \"✅ Loaded\" : \"❌ Not Found\");\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Supabase URL and Key are required');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,iBAAiB,uCAAc;AAE3C,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/api.js"],"sourcesContent":["import { MercadoPagoConfig, Preference, OAuth } from \"mercadopago\";\r\n\r\nimport {supabase} from \"./utils/supabaseClient\"\r\n\r\n// Configuración de Mercado Pago\r\nexport const mercadopago = new MercadoPagoConfig({ accessToken: process.env.MP_ACCESS_TOKEN });\r\n\r\nconst api = {\r\n  oauth: {\r\n    // Genera la URL para que los vendedores autoricen la app y obtengan un access_token\r\n    getAuthURL() {\r\n      const clientId = process.env.MP_CLIENT_ID;\r\n      const redirectUri = process.env.MP_REDIRECT_URI;\r\n      return `https://auth.mercadopago.com/authorization?client_id=${clientId}&response_type=code&platform_id=mp&redirect_uri=${redirectUri}`;\r\n    },\r\n\r\n    // Intercambia el authorization_code por un access_token del vendedor\r\n    async exchangeCode(code) {\r\n      const oauth = new OAuth(mercadopago);\r\n      try {\r\n        const response = await oauth.token({ \r\n          client_secret: process.env.MP_CLIENT_SECRET, \r\n          grant_type: \"authorization_code\", \r\n          code, \r\n          redirect_uri: process.env.MP_REDIRECT_URI \r\n        });\r\n\r\n        const { access_token, refresh_token, user_id } = response;\r\n\r\n        // Guardar el access_token del vendedor en Supabase\r\n        const { data, error } = await supabase\r\n          .from('sellers')\r\n          .upsert([{ user_id, access_token, refresh_token }]);\r\n\r\n        if (error) throw new Error(\"Error al guardar el vendedor: \" + error.message);\r\n\r\n        return { user_id, access_token };\r\n      } catch (error) {\r\n        throw new Error(\"Error en OAuth: \" + error.message);\r\n      }\r\n    },\r\n\r\n    // Refresca el access_token del vendedor si ha expirado\r\n    async refreshToken(refreshToken) {\r\n      const oauth = new OAuth(mercadopago);\r\n      try {\r\n        const response = await oauth.token({\r\n          client_secret: process.env.MP_CLIENT_SECRET,\r\n          grant_type: \"refresh_token\",\r\n          refresh_token: refreshToken,\r\n        });\r\n\r\n        const { access_token, refresh_token } = response;\r\n        return { access_token, refresh_token };\r\n      } catch (error) {\r\n        throw new Error(\"Error al refrescar el token: \" + error.message);\r\n      }\r\n    }\r\n  },\r\n\r\n  sale: {\r\n    async create({ sellerId, items, totalAmount }) {\r\n      // Obtener el access_token del vendedor desde Supabase\r\n      const { data, error } = await supabase\r\n        .from('sellers')\r\n        .select('access_token')\r\n        .eq('user_id', sellerId)\r\n        .single();\r\n\r\n      if (error || !data) {\r\n        throw new Error('No se encontró el vendedor o hubo un error al obtener su access_token');\r\n      }\r\n\r\n      const sellerAccessToken = data.access_token;\r\n\r\n      // Crear preferencia de pago con split de comisiones\r\n      const preference = await new Preference(new MercadoPagoConfig({ accessToken: sellerAccessToken })).create({\r\n        body: {\r\n          items: items.map(item => ({\r\n            id: item.id,\r\n            title: item.name,\r\n            quantity: item.quantity,\r\n            unit_price: item.price,\r\n          })),\r\n          marketplace_fee: totalAmount * 0.05,  // 5% de comisión\r\n          payer: {\r\n            email: \"comprador@example.com\",\r\n          },\r\n        },\r\n      });\r\n\r\n      // Guardar la venta en Supabase\r\n      const { data: saleData, error: saleError } = await supabase\r\n        .from('sales')\r\n        .insert([{ sale_id: preference.id, user_id: sellerId, amount: totalAmount, status: 'pendiente', items }]);\r\n\r\n      if (saleError) {\r\n        throw new Error('Error al registrar la venta: ' + saleError.message);\r\n      }\r\n\r\n      return { init_point: preference.init_point, sale: saleData };\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ClientAuthorization.jsx"],"sourcesContent":["// components/ClientAuthorization.js\r\nimport React from \"react\";\r\n\r\nconst ClientAuthorization = ({ mpUserId }) => {\r\n  // Si el cliente ya tiene el mp_user_id, no mostramos nada o podemos mostrar un mensaje\r\n  if (mpUserId) {\r\n    return <p className=\"text-center text-green-500\">Tu cuenta ya está conectada a Mercado Pago.</p>;\r\n  }\r\n\r\n  // Si el cliente no ha autorizado, mostramos un enlace para autorizar Mercado Pago\r\n  const authorizationUrl = process.env.MP_AUTHORIZATION_URL || \"\";\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <p className=\"text-gray-600\">Conecta tu cuenta de Mercado Pago para continuar.</p>\r\n      <a\r\n        href={authorizationUrl}\r\n        className=\"rounded bg-blue-500 text-white p-2 mt-4 inline-block\"\r\n      >\r\n        Autorizar Mercado Pago\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientAuthorization;\r\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AACpC;;;AAEA,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE;IACvC,uFAAuF;IACvF,IAAI,UAAU;QACZ,qBAAO,8OAAC;YAAE,WAAU;sBAA6B;;;;;;IACnD;IAEA,kFAAkF;IAClF,MAAM,mBAAmB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;IAE7D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;0BAC7B,8OAAC;gBACC,MAAM;gBACN,WAAU;0BACX;;;;;;;;;;;;AAKP;uCAEe"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/paymentResume/page.js"],"sourcesContent":["import { redirect } from \"next/navigation\";\r\nimport api from \"../../../api\";\r\nimport PurchaseResume from \"../../../components/PurchaseResume\"; // Componente del resumen de la compra\r\nimport ClientAuthorization from \"../../../components/ClientAuthorization\"; // Componente para la autorización\r\nimport { supabase } from \"../../../utils/supabaseClient\"; // Asegúrate de tener configurado supabase\r\n\r\nexport default async function ResumePage() {\r\n  // Obtener los datos del cliente desde la tabla 'clients'\r\n  const { data: client, error: clientError } = await supabase\r\n    .from(\"clients\")\r\n    .select(\"*\")\r\n    .eq(\"email\", \"alanfish@gmail.com\") // Aquí pones el email o alguna otra forma de identificar al cliente\r\n    .single();\r\n\r\n  if (clientError) {\r\n    console.error(\"Error al obtener los datos del cliente: \", clientError.message);\r\n    return;\r\n  }\r\n\r\n  // Si el cliente ya ha autorizado MercadoPago, se muestra el formulario\r\n  const authorizationUrl = client.mp_user_id ? null : await api.oauth.getAuthURL();\r\n\r\n  // Función para manejar el envío del mensaje\r\n  async function add(formData) {\r\n    \"use server\";\r\n\r\n    const message = formData.get(\"text\");\r\n\r\n    // Crear un registro de venta en Supabase\r\n    const { data, error } = await supabase\r\n      .from(\"sales\")\r\n      .insert([\r\n        {\r\n          client_id: client.id, // Usamos el id del cliente desde la tabla 'clients'\r\n          status: \"pending\", // Ajusta según tu flujo\r\n          message_text: message,\r\n        },\r\n      ]);\r\n\r\n    if (error) {\r\n      console.error(\"Error al registrar la compra: \", error.message);\r\n      return;\r\n    }\r\n\r\n    // Redirigir al usuario a la URL de pago si ya ha autorizado MercadoPago\r\n    if (client.mp_user_id) {\r\n      const url = await api.message.submit(message);\r\n      redirect(url);\r\n    } else {\r\n      console.error(\"El cliente no ha autorizado MercadoPago\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"grid gap-8\">\r\n      {/* Componente PurchaseResume con el resumen de la compra */}\r\n      <PurchaseResume />\r\n\r\n      {/* Usar el componente ClientAuthorization para manejar la autorización de MercadoPago */}\r\n      <ClientAuthorization mpUserId={client.mp_user_id} />\r\n\r\n      {/* Si el cliente ya autorizó la integración, mostramos el formulario */}\r\n      {client.mp_user_id ? (\r\n        <form action={add} className=\"grid gap-2\">\r\n          <textarea\r\n            className=\"border-2 border-blue-400 p-2\"\r\n            name=\"text\"\r\n            placeholder=\"Escribe tu mensaje aquí\"\r\n            rows=\"3\"\r\n          />\r\n          <button className=\"rounded bg-blue-400 p-2\" type=\"submit\">\r\n            Enviar\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        // Si no autorizó la integración, mostramos un mensaje para conectar Mercado Pago\r\n        <p className=\"text-center text-gray-500\">\r\n          Por favor, conecta tu cuenta de Mercado Pago para completar la compra.\r\n        </p>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA,4NAAiE,sCAAsC;AACvG,sOAA2E,kCAAkC;AAC7G,gNAA0D,0CAA0C;AAJpG;;;;;;;;;MAsBE,4CAA4C;AAC5C,wBAAA,eAAe,4BAAI,QAAQ;;IAGzB,MAAM,UAAU,SAAS,GAAG,CAAC;IAE7B,yCAAyC;IACzC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC;QACN;YACE,SAAS;YACT,QAAQ;YACR,cAAc;QAChB;KACD;IAEH,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,kCAAkC,MAAM,OAAO;QAC7D;IACF;IAEA,wEAAwE;IACxE,oBAAuB;QACrB,MAAM,MAAM,MAAM,mGAAA,CAAA,UAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACrC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,QAAQ,KAAK,CAAC;IAChB;AACF;AA7Ca,eAAe;IAC5B,yDAAyD;IACzD,MAAM,EAAE,MAAM,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACxD,IAAI,CAAC,WACL,MAAM,CAAC,KACP,EAAE,CAAC,SAAS,sBAAsB,oEAAoE;KACtG,MAAM;IAET,IAAI,aAAa;QACf,QAAQ,KAAK,CAAC,4CAA4C,YAAY,OAAO;QAC7E;IACF;IAEA,uEAAuE;IACvE,MAAM,mBAAmB,OAAO,UAAU,GAAG,OAAO,MAAM,mGAAA,CAAA,UAAG,CAAC,KAAK,CAAC,UAAU;QAG/D,MAAf,+OAAA;;;;IA8BA,qBACE,8OAAC;QAAQ,WAAU;;0BAEjB,8OAAC,6HAAA,CAAA,UAAc;;;;;0BAGf,8OAAC,kIAAA,CAAA,UAAmB;gBAAC,UAAU,OAAO,UAAU;;;;;;YAG/C,OAAO,UAAU,iBAChB,8OAAC;gBAAK,QAAQ;gBAAK,WAAU;;kCAC3B,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,MAAK;;;;;;kCAEP,8OAAC;wBAAO,WAAU;wBAA0B,MAAK;kCAAS;;;;;;;;;;;uBAK5D,iFAAiF;0BACjF,8OAAC;gBAAE,WAAU;0BAA4B;;;;;;;;;;;;AAMjD"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}