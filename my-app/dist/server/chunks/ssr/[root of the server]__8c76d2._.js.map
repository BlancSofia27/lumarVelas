{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\" rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/fileUpload.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst FileUpload = ({ onFileSelect }: { onFileSelect: (e: ChangeEvent<HTMLInputElement>) => void }) => {\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      {/* Input HTML estándar */}\r\n      <input\r\n        accept=\"image/*\"\r\n        type=\"file\"\r\n        id=\"file-upload\"\r\n        onChange={onFileSelect}\r\n        style={{ display: 'none' }}  // Ocultar el input real\r\n      />\r\n      {/* Label para hacer clic y activar el input */}\r\n      <label htmlFor=\"file-upload\">\r\n        <Button variant=\"contained\" component=\"span\">\r\n          Subir Imagen\r\n        </Button>\r\n      </label>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;;;AAEA,MAAM,aAAa,CAAC,EAAE,YAAY,EAAgE;IAChG,qBACE,8OAAC,iLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,WAAW;QAAS;;0BAE7B,8OAAC;gBACC,QAAO;gBACP,MAAK;gBACL,IAAG;gBACH,UAAU;gBACV,OAAO;oBAAE,SAAS;gBAAO;;;;;;0BAG3B,8OAAC;gBAAM,SAAQ;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,WAAU;8BAAO;;;;;;;;;;;;;;;;;AAMrD;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_ANON_KEY;\r\n\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Supabase URL and Key are required');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAGN,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Paper, TextField, Button, Grid, Typography, Slider } from \"@mui/material\";\r\nimport Image from \"next/image\"; // Si estás usando Next.js, puedes usar el componente Image de Next.js\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\"; // Ícono de corazón de Lucide\r\nimport FileUpload from \"./fileUpload\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ProductPublish = () => {\r\n  // Estado para controlar los datos del formulario\r\n  const [product, setProduct] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    image: \"\",\r\n    intensity: 3, // Nuevo campo para la intensidad\r\n  });\r\n\r\n  // Función para actualizar el estado del formulario\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Función para manejar la carga de la imagen\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProduct((prev) => ({\r\n          ...prev,\r\n          image: reader.result,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file); // Cargar la imagen como una URL de datos\r\n    }\r\n  };\r\n\r\n  // Función para manejar añadir al carrito\r\n  const handlePublish = () => {\r\n    toast.success(`Producto Publicado con exito`);\r\n  };\r\n\r\n  // Función para manejar el cambio de intensidad\r\n  const handleIntensityChange = (event, newValue) => {\r\n    setProduct((prev) => ({\r\n      ...prev,\r\n      intensity: newValue,\r\n    }));\r\n  };\r\n\r\n  // Función para renderizar los puntos de intensidad\r\n  const renderIntensityDots = () => {\r\n    const dots = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n      dots.push(\r\n        <span\r\n          key={i}\r\n          style={{\r\n            width: \"10px\",\r\n            height: \"10px\",\r\n            borderRadius: \"50%\",\r\n            margin: \"0 3px\",\r\n            backgroundColor: i <= product.intensity ? \"black\" : \"#D3D3D3\", // Color negro si lleno, gris claro si vacío\r\n            display: \"inline-block\",\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} className=\"p-8\">\r\n      <ToastContainer position=\"bottom-right\" />\r\n      {/* Columna izquierda con el formulario */}\r\n      <Grid item xs={12} md={8}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Publicar un Producto</Typography>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nombre del Producto\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Descripción\"\r\n            name=\"description\"\r\n            value={product.description}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Precio\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n\r\n          {/* Componente para seleccionar archivo */}\r\n          <FileUpload onFileSelect={handleImageUpload} />\r\n\r\n          {/* Componente para seleccionar la intensidad */}\r\n          <Typography variant=\"body1\" sx={{ marginBottom: 1 }}>\r\n            Intensidad: {product.intensity}\r\n          </Typography>\r\n          <Slider\r\n            value={product.intensity}\r\n            min={1}\r\n            max={5}\r\n            step={1}\r\n            onChange={handleIntensityChange}\r\n            valueLabelDisplay=\"auto\"\r\n            valueLabelFormat={(value) => `${value}`}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n\r\n          {/* Botón para enviar el formulario */}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ marginTop: 2 }}\r\n            onClick={() => {\r\n              handlePublish();\r\n            }}\r\n          >\r\n            Publicar Producto\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {/* Columna derecha con la tarjeta de vista previa */}\r\n      <Grid item xs={12} md={4}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Vista Previa</Typography>\r\n\r\n          {/* Vista previa con el modelo de Card */}\r\n          <Skeleton key={product.name} className=\"bg-white\">\r\n            <div className=\"relative flex flex-col items-center cursor-pointer\">\r\n              {/* Ícono de corazón con hover */}\r\n              <div className=\"absolute top-2 right-2 p-1 rounded-full\">\r\n                <Heart className=\"text-black w-6 h-6 hover:fill-black hover:text-black transition-all\" />\r\n              </div>\r\n\r\n              {/* Imagen del producto */}\r\n              {product.image ? (\r\n                <Image\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  width={400}\r\n                  height={450}\r\n                  className=\"w-full rounded-md object-cover\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full h-56 bg-gray-300 rounded-md\" />\r\n              )}\r\n\r\n              {/* Texto centrado */}\r\n              <h3 className=\"mt-4 text-lg font-semibold text-center\">{product.name || 'Nombre del Producto'}</h3>\r\n              <p className=\"text-sm text-muted-foreground text-center\">{product.description || 'Descripción del producto...'}</p>\r\n              <span className=\"text-md font-bold text-center\">${product.price || 'Precio'}</span>\r\n              <div className=\"mt-2 text-center\">\r\n                {/* Renderizamos los puntos de intensidad */}\r\n                {renderIntensityDots()}\r\n              </div>\r\n\r\n              {/* Botón de añadir al carrito */}\r\n              <button\r\n                onClick={() => {\r\n                  handlePublish();\r\n                }}\r\n                className=\"mt-2 px-4 py-2 bg-black text-white rounded-lg\"\r\n              >\r\n                Añadir al carrito\r\n              </button>\r\n            </div>\r\n          </Skeleton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPublish;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}