{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport { Paper, TextField, Button, Grid, Typography, Input, Skeleton } from '@mui/material';\r\nimport Heart from '@mui/icons-material/Favorite'; // Asegúrate de tener el ícono de corazón\r\nimport Image from 'next/image'; // Si estás usando Next.js, puedes usar el componente Image de Next.js\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\"; // Ícono de corazón de Lucide\r\n\r\nconst ProductPublish = () => {\r\n  // Estado para controlar los datos del formulario\r\n  const [product, setProduct] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    image: '',\r\n  });\r\n\r\n  // Función para actualizar el estado del formulario\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Función para manejar la carga de la imagen\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProduct((prev) => ({\r\n          ...prev,\r\n          image: reader.result as string,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file); // Cargar la imagen como una URL de datos\r\n    }\r\n  };\r\n\r\n  // Función para manejar añadir al carrito\r\n  const handleAddToCart = (product: any) => {\r\n    // Lógica para agregar al carrito\r\n    console.log('Producto añadido al carrito:', product);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {/* Columna izquierda con el formulario */}\r\n      <Grid item xs={12} md={8}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Publicar un Producto</Typography>\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label=\"Nombre del Producto\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Descripción\"\r\n            name=\"description\"\r\n            value={product.description}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Precio\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          \r\n          {/* Campo para subir un archivo (imagen) */}\r\n          <Input\r\n            fullWidth\r\n            type=\"file\"\r\n            onChange={handleImageUpload}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          \r\n          {/* Botón para enviar el formulario */}\r\n          <Button variant=\"contained\" color=\"primary\" sx={{ marginTop: 2 }}>\r\n            Publicar Producto\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {/* Columna derecha con la tarjeta de vista previa */}\r\n      <Grid item xs={12} md={4}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Vista Previa</Typography>\r\n\r\n          {/* Vista previa con el modelo de Card */}\r\n          <Skeleton key={product.name} className=\"bg-white\">\r\n            <div className=\"relative flex flex-col items-center cursor-pointer\">\r\n              {/* Ícono de corazón con hover */}\r\n              <div className=\"absolute top-2 right-2 p-1 rounded-full\">\r\n                <Heart className=\"text-black w-6 h-6 hover:fill-black hover:text-black transition-all\" />\r\n              </div>\r\n\r\n              {/* Imagen del producto */}\r\n              {product.image ? (\r\n                <Image\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  width={400}\r\n                  height={450}\r\n                  className=\"w-full rounded-md object-cover\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full h-56 bg-gray-300 rounded-md\" />\r\n              )}\r\n\r\n              {/* Texto centrado */}\r\n              <h3 className=\"mt-4 text-lg font-semibold text-center\">{product.name || 'Nombre del Producto'}</h3>\r\n              <p className=\"text-sm text-muted-foreground text-center\">{product.description || 'Descripción del producto...'}</p>\r\n              <span className=\"text-md font-bold text-center\">${product.price || 'Precio'}</span>\r\n\r\n              {/* Botón de añadir al carrito */}\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation(); // Evita que el clic en el botón también active la redirección\r\n                  handleAddToCart(product);\r\n                }}\r\n                className=\"mt-2 px-4 py-2 bg-black text-white rounded-lg\"\r\n              >\r\n                Añadir al carrito\r\n              </button>\r\n            </div>\r\n          </Skeleton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPublish;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}