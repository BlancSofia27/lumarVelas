{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_ANON_KEY;\r\n\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Supabase URL and Key are required');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAGN,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseService.js"],"sourcesContent":["import { supabase } from './supabaseClient';\r\n\r\n// Función para subir una imagen al Storage de Supabase\r\nexport const uploadImage = async (image, fieldName) => {\r\n  if (!image) {\r\n    throw new Error(`No image provided for field: ${fieldName}`);\r\n  }\r\n\r\n  const fileName = `${Date.now()}_${fieldName}_${image.name}`;\r\n  const { data, error } = await supabase.storage\r\n    .from('products')  // Nombre del bucket\r\n    .upload(`images/${fileName}`, image, {\r\n      contentType: image.type,\r\n    });\r\n\r\n  if (error) {\r\n    console.error(`Error uploading image (${fieldName}): ${error.message}`);\r\n    throw new Error(`Error uploading image (${fieldName}): ${error.message}`);\r\n  }\r\n\r\n  console.log('Upload response:', data);  // Imprime toda la respuesta para ver qué contiene\r\n\r\n  // Generar la URL pública directamente después de la carga\r\n  const publicURL = supabase.storage.from('products').getPublicUrl(data.path).publicURL;\r\n\r\n  if (!publicURL) {\r\n    console.error('Public URL is null');\r\n    throw new Error(`Error generating public URL for ${fieldName}`);\r\n  }\r\n\r\n  console.log('Public URL:', publicURL);  // Verifica la URL pública generada\r\n  return publicURL;\r\n};\r\n\r\n// Función para crear un producto en la base de datos\r\nexport const createProduct = async (product) => {\r\n  try {\r\n    // Validar que las imágenes estén presentes\r\n    if (!product.image || !product.image1) {\r\n      throw new Error('Both image and image1 are required.');\r\n    }\r\n\r\n    // Subir las imágenes y obtener sus URLs públicas\r\n    const [imageUrl, imageUrl1] = await Promise.all([ \r\n      uploadImage(product.image, 'product_image'),\r\n      uploadImage(product.image1, 'product_image1')\r\n    ]);\r\n\r\n    // Verificar que las URLs no sean null\r\n    if (!imageUrl || !imageUrl1) {\r\n      throw new Error('Failed to upload one or both images.');\r\n    }\r\n\r\n    console.log('Image URLs:', imageUrl, imageUrl1);  // Verifica las URLs de las imágenes\r\n\r\n    // Insertar el producto en la base de datos con las URLs generadas\r\n    const { data, error } = await supabase\r\n      .from('products')  // Nombre de la tabla\r\n      .insert([{\r\n        name: product.name,\r\n        fragance: product.fragance,\r\n        description: product.description || '',\r\n        price: parseFloat(product.price) || null,\r\n        image: imageUrl,  // Guardar la URL de la imagen principal\r\n        image1: imageUrl1,  // Guardar la URL de la segunda imagen\r\n        intensity: parseInt(product.intensity, 10),  // Convertir intensidad a número\r\n      }]);\r\n\r\n    if (error) {\r\n      console.error('Error creating product:', error.message);\r\n      throw new Error('Error creating product: ' + error.message);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error:', error.message);\r\n    throw new Error('Error: ' + error.message);\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,cAAc,OAAO,OAAO;IACvC,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,WAAW;IAC7D;IAEA,MAAM,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,UAAU,CAAC,EAAE,MAAM,IAAI,EAAE;IAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YAAa,oBAAoB;KACtC,MAAM,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO;QACnC,aAAa,MAAM,IAAI;IACzB;IAEF,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,UAAU,GAAG,EAAE,MAAM,OAAO,EAAE;QACtE,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,UAAU,GAAG,EAAE,MAAM,OAAO,EAAE;IAC1E;IAEA,QAAQ,GAAG,CAAC,oBAAoB,OAAQ,kDAAkD;IAE1F,0DAA0D;IAC1D,MAAM,YAAY,uHAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,YAAY,CAAC,KAAK,IAAI,EAAE,SAAS;IAErF,IAAI,CAAC,WAAW;QACd,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,WAAW;IAChE;IAEA,QAAQ,GAAG,CAAC,eAAe,YAAa,mCAAmC;IAC3E,OAAO;AACT;AAGO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,2CAA2C;QAC3C,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,MAAM,EAAE;YACrC,MAAM,IAAI,MAAM;QAClB;QAEA,iDAAiD;QACjD,MAAM,CAAC,UAAU,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC9C,YAAY,QAAQ,KAAK,EAAE;YAC3B,YAAY,QAAQ,MAAM,EAAE;SAC7B;QAED,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,WAAW;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC,eAAe,UAAU,YAAa,oCAAoC;QAEtF,kEAAkE;QAClE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YAAa,qBAAqB;SACvC,MAAM,CAAC;YAAC;gBACP,MAAM,QAAQ,IAAI;gBAClB,UAAU,QAAQ,QAAQ;gBAC1B,aAAa,QAAQ,WAAW,IAAI;gBACpC,OAAO,WAAW,QAAQ,KAAK,KAAK;gBACpC,OAAO;gBACP,QAAQ;gBACR,WAAW,SAAS,QAAQ,SAAS,EAAE;YACzC;SAAE;QAEJ,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B,MAAM,OAAO;YACtD,MAAM,IAAI,MAAM,6BAA6B,MAAM,OAAO;QAC5D;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU,MAAM,OAAO;QACrC,MAAM,IAAI,MAAM,YAAY,MAAM,OAAO;IAC3C;AACF"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport supabase from \"../../utils/supabaseClient\";  // Importa el cliente de Supabase\r\n\r\nconst ProductForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [fragance, setFragance] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState(null);  // Imagen principal\r\n  const [image1, setImage1] = useState(null); // Imagen secundaria\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [imagePublicUrl, setImagePublicUrl] = useState(null);\r\n  const [image1PublicUrl, setImage1PublicUrl] = useState(null);\r\n\r\n  // Función para manejar el cambio de la imagen principal\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cambio de la imagen secundaria\r\n  const handleImage1Change = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage1(file);\r\n    }\r\n  };\r\n\r\n  // Función para subir una imagen a Supabase Storage y obtener la URL pública\r\n  const uploadImageToSupabase = async (file, folder) => {\r\n    const { data, error } = await supabase.storage\r\n      .from(folder)\r\n      .upload(`${Date.now()}-${file.name}`, file);\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    // Obtener la URL pública del archivo cargado\r\n    const publicURL = supabase.storage\r\n      .from(folder)\r\n      .getPublicUrl(data.path).publicURL;\r\n\r\n    return publicURL;\r\n  };\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !fragance || !price || !image || !image1) {\r\n      setError('Por favor completa todos los campos.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Subir las imágenes a Supabase y obtener las URLs públicas\r\n      const imageUrl = await uploadImageToSupabase(image, 'products');  // Imagen principal\r\n      const image1Url = await uploadImageToSupabase(image1, 'products');  // Imagen secundaria\r\n\r\n      setImagePublicUrl(imageUrl);\r\n      setImage1PublicUrl(image1Url);\r\n\r\n      // Guardar el producto en la base de datos de Supabase\r\n      const { data, error } = await supabase\r\n        .from(\"products\")\r\n        .insert([\r\n          { \r\n            name, \r\n            fragance, \r\n            description, \r\n            price, \r\n            image_url: imageUrl, \r\n            image1_url: image1Url \r\n          }\r\n        ]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      // Limpiar el formulario\r\n      setName('');\r\n      setFragance('');\r\n      setDescription('');\r\n      setPrice('');\r\n      setImage(null);\r\n      setImage1(null);\r\n\r\n      alert('Producto creado con éxito!');\r\n    } catch (err) {\r\n      setError('Error al crear el producto: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto p-6 bg-white border rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Crear Producto</h2>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n            Nombre del Producto\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"fragance\" className=\"block text-sm font-medium text-gray-700\">\r\n            Fragancia\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fragance\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={fragance}\r\n            onChange={(e) => setFragance(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\r\n            Descripción\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\r\n            Precio\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700\">\r\n            Imagen del Producto (Principal)\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"image1\" className=\"block text-sm font-medium text-gray-700\">\r\n            Imagen del Producto (Secundaria)\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image1\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            onChange={handleImage1Change}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Cargando...' : 'Crear Producto'}\r\n        </button>\r\n      </form>\r\n\r\n      {imagePublicUrl && image1PublicUrl && (\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"text-lg font-semibold\">Imágenes cargadas:</h3>\r\n          <div className=\"flex space-x-4\">\r\n            <img src={imagePublicUrl} alt=\"Imagen del producto principal\" className=\"w-32 h-32 object-cover\" />\r\n            <img src={image1PublicUrl} alt=\"Imagen del producto secundaria\" className=\"w-32 h-32 object-cover\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}