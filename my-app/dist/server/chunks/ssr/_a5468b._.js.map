{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\" rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/products.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport velas from \"@/app/velas.json\";\r\nimport Image from \"next/image\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\"; // Ícono de corazón de Lucide\r\nimport { Product } from \"@/types/product\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemToCart } from \"@/store/cartSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface VelasGridProps {\r\n  filters?: {\r\n    categoria?: string;\r\n    nombre?: string;\r\n  };\r\n}\r\n\r\nconst VelasGrid: React.FC<VelasGridProps> = ({ filters = {} }) => {\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  // Filtrar velas con base en los parámetros recibidos\r\n  const filteredVelas = velas.filter((vela) => {\r\n    let isMatch = true;\r\n    if (filters.categoria) {\r\n      isMatch = isMatch && vela.categoria === filters.categoria;\r\n    }\r\n    if (filters.nombre) {\r\n      isMatch = isMatch && vela.nombre.toLowerCase().includes(filters.nombre.toLowerCase());\r\n    }\r\n    return isMatch;\r\n  });\r\n\r\n  const handleAddToCart = (vela: Vela) => {\r\n    dispatch(\r\n      addItemToCart({\r\n        id: vela.id,\r\n        name: vela.nombre,\r\n        price: vela.precio,\r\n        img: vela.imagen,\r\n        quantity: 1, // Inicializa la cantidad en 1\r\n      })\r\n    );\r\n    toast.success(`${vela.nombre} añadido al carrito`);\r\n  };\r\n\r\n  // const handleCardClick = (id: string) => {\r\n  //   router.push(`/products/${id}`);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 text-zinc-900\">\r\n      {filteredVelas.map((vela: Vela) => (\r\n        <Skeleton key={vela.id} className=\"bg-white\" title={vela.nombre}>\r\n          <div className=\"relative flex flex-col items-center cursor-pointer\">\r\n            {/* Ícono de corazón con hover */}\r\n            <div className=\"absolute top-2 right-2 p-1 rounded-full\">\r\n              <Heart className=\"text-black w-6 h-6 hover:fill-black hover:text-black transition-all\" />\r\n            </div>\r\n\r\n            {/* Imagen del producto */}\r\n            <Image\r\n              src={vela.imagen}\r\n              alt={vela.nombre}\r\n              width={400}\r\n              height={450}\r\n              className=\"w-full rounded-md object-cover\"\r\n              // onClick={() => handleCardClick(vela.id)} // Redirige al hacer clic en la imagen\r\n            />\r\n\r\n            {/* Texto centrado */}\r\n            <h3 className=\"mt-4 text-lg font-semibold text-center\">{vela.nombre}</h3>\r\n            <p className=\"text-sm text-muted-foreground text-center\">{vela.descripcion}</p>\r\n            <span className=\"text-md font-bold text-center\">${vela.precio}</span>\r\n\r\n            {/* Botón de añadir al carrito */}\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation(); // Evita que el clic en el botón también active la redirección\r\n                handleAddToCart(vela);\r\n              }}\r\n              className=\"mt-2 px-4 py-2 bg-black text-white rounded-lg\"\r\n            >\r\n              Añadir al carrito\r\n            </button>\r\n          </div>\r\n        </Skeleton>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VelasGrid;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAIA;AACA;AAFA;AAFA,iVAAsC,6BAA6B;AALnE;;;;;;;;;AAkBA,MAAM,YAAsC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE;IAC3D,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAG3B,qDAAqD;IACrD,MAAM,gBAAgB,oFAAA,CAAA,UAAK,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,UAAU;QACd,IAAI,QAAQ,SAAS,EAAE;YACrB,UAAU,WAAW,KAAK,SAAS,KAAK,QAAQ,SAAS;QAC3D;QACA,IAAI,QAAQ,MAAM,EAAE;YAClB,UAAU,WAAW,KAAK,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,MAAM,CAAC,WAAW;QACpF;QACA,OAAO;IACT;IAEA,MAAM,kBAAkB,CAAC;QACvB,SACE,CAAA,GAAA,kHAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,IAAI,KAAK,EAAE;YACX,MAAM,KAAK,MAAM;YACjB,OAAO,KAAK,MAAM;YAClB,KAAK,KAAK,MAAM;YAChB,UAAU;QACZ;QAEF,sKAAA,CAAA,QAAK,CAAC,OAAO,CAAC,GAAG,KAAK,MAAM,CAAC,mBAAmB,CAAC;IACnD;IAEA,4CAA4C;IAC5C,oCAAoC;IACpC,KAAK;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,qBAClB,8OAAC,6HAAA,CAAA,WAAQ;gBAAe,WAAU;gBAAW,OAAO,KAAK,MAAM;0BAC7D,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;;;;;sCAInB,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,KAAK,MAAM;4BAChB,KAAK,KAAK,MAAM;4BAChB,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;sCAKZ,8OAAC;4BAAG,WAAU;sCAA0C,KAAK,MAAM;;;;;;sCACnE,8OAAC;4BAAE,WAAU;sCAA6C,KAAK,WAAW;;;;;;sCAC1E,8OAAC;4BAAK,WAAU;;gCAAgC;gCAAE,KAAK,MAAM;;;;;;;sCAG7D,8OAAC;4BACC,SAAS,CAAC;gCACR,EAAE,eAAe,IAAI,8DAA8D;gCACnF,gBAAgB;4BAClB;4BACA,WAAU;sCACX;;;;;;;;;;;;eA7BU,KAAK,EAAE;;;;;;;;;;AAqC9B;uCAEe"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}