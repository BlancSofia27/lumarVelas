{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseService.js"],"sourcesContent":["import { supabase } from './supabaseClient';\r\n\r\n// Función para subir una imagen al Storage de Supabase\r\nexport const uploadImage = async (image, fieldName) => {\r\n  if (!image) {\r\n    throw new Error(`No image provided for field: ${fieldName}`);\r\n  }\r\n\r\n  const fileName = `${Date.now()}_${fieldName}_${image.name}`;\r\n  const { data, error } = await supabase.storage\r\n    .from('products')  // Nombre del bucket\r\n    .upload(`images/${fileName}`, image, {\r\n      contentType: image.type,\r\n    });\r\n\r\n  if (error) {\r\n    throw new Error(`Error uploading image (${fieldName}): ${error.message}`);\r\n  }\r\n\r\n  // Obtener la URL pública de la imagen\r\n  const { publicURL, error: urlError } = supabase.storage.from('products').getPublicUrl(`images/${fileName}`);\r\n\r\n  if (urlError) {\r\n    throw new Error(`Error generating public URL for ${fieldName}`);\r\n  }\r\n\r\n  if (!publicURL) {\r\n    throw new Error(`Error generating public URL for ${fieldName}`);\r\n  }\r\n\r\n  console.log(publicURL);\r\n  return publicURL;\r\n};\r\n\r\n// Función para crear un producto en la base de datos\r\nexport const createProduct = async (product) => {\r\n  try {\r\n    // Validar que las imágenes estén presentes\r\n    if (!product.image || !product.image1) {\r\n      throw new Error('Both image and image1 are required.');\r\n    }\r\n\r\n    // Subir las imágenes y obtener sus URLs públicas\r\n    const [imageUrl, imageUrl1] = await Promise.all([\r\n      uploadImage(product.image, 'product_image'),\r\n      uploadImage(product.image1, 'product_image1'),\r\n    ]);\r\n\r\n    // Verificar que las URLs no sean null\r\n    if (!imageUrl || !imageUrl1) {\r\n      throw new Error('Failed to upload one or both images.');\r\n    }\r\n\r\n    // Insertar el producto en la base de datos con las URLs generadas\r\n    const { data, error } = await supabase\r\n      .from('products')  // Nombre de la tabla\r\n      .insert([\r\n        {\r\n          name: product.name,\r\n          fragance: product.fragance,\r\n          description: product.description || '',\r\n          price: parseFloat(product.price) || null,\r\n          image: imageUrl,  // Guardar la URL de la imagen principal\r\n          image1: imageUrl1,  // Guardar la URL de la segunda imagen\r\n          intensity: parseInt(product.intensity, 10),  // Convertir intensidad a número\r\n        },\r\n      ]);\r\n\r\n    if (error) {\r\n      throw new Error('Error creating product: ' + error.message);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error:', error.message);\r\n    throw new Error('Error: ' + error.message);\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,cAAc,OAAO,OAAO;IACvC,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,WAAW;IAC7D;IAEA,MAAM,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,UAAU,CAAC,EAAE,MAAM,IAAI,EAAE;IAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YAAa,oBAAoB;KACtC,MAAM,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO;QACnC,aAAa,MAAM,IAAI;IACzB;IAEF,IAAI,OAAO;QACT,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,UAAU,GAAG,EAAE,MAAM,OAAO,EAAE;IAC1E;IAEA,sCAAsC;IACtC,MAAM,EAAE,SAAS,EAAE,OAAO,QAAQ,EAAE,GAAG,uHAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,YAAY,CAAC,CAAC,OAAO,EAAE,UAAU;IAE1G,IAAI,UAAU;QACZ,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,WAAW;IAChE;IAEA,IAAI,CAAC,WAAW;QACd,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,WAAW;IAChE;IAEA,QAAQ,GAAG,CAAC;IACZ,OAAO;AACT;AAGO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,2CAA2C;QAC3C,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,MAAM,EAAE;YACrC,MAAM,IAAI,MAAM;QAClB;QAEA,iDAAiD;QACjD,MAAM,CAAC,UAAU,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC9C,YAAY,QAAQ,KAAK,EAAE;YAC3B,YAAY,QAAQ,MAAM,EAAE;SAC7B;QAED,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,WAAW;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,kEAAkE;QAClE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YAAa,qBAAqB;SACvC,MAAM,CAAC;YACN;gBACE,MAAM,QAAQ,IAAI;gBAClB,UAAU,QAAQ,QAAQ;gBAC1B,aAAa,QAAQ,WAAW,IAAI;gBACpC,OAAO,WAAW,QAAQ,KAAK,KAAK;gBACpC,OAAO;gBACP,QAAQ;gBACR,WAAW,SAAS,QAAQ,SAAS,EAAE;YACzC;SACD;QAEH,IAAI,OAAO;YACT,MAAM,IAAI,MAAM,6BAA6B,MAAM,OAAO;QAC5D;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU,MAAM,OAAO;QACrC,MAAM,IAAI,MAAM,YAAY,MAAM,OAAO;IAC3C;AACF"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport { createProduct } from '../../utils/supabaseService';  // Importamos las funciones de nuestro servicio\r\n\r\nconst ProductForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [fragance, setFragance] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState(null);  // Estado para la primera imagen\r\n  const [image1, setImage1] = useState(null);  // Estado para la segunda imagen\r\n  const [intensity, setIntensity] = useState(1);  // Estado para la intensidad (1 al 5)\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Función para manejar la selección de la primera imagen\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n    }\r\n  };\r\n\r\n  // Función para manejar la selección de la segunda imagen\r\n  const handleImage1Change = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage1(file);\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cambio de la intensidad\r\n  const handleIntensityChange = (e) => {\r\n    setIntensity(e.target.value);\r\n  };\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !fragance || !price || !image || !image1) {\r\n      setError('Por favor completa todos los campos.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Crear el producto en la base de datos (incluye la subida de las imágenes)\r\n      const product = { name, fragance, description, price, image, image1, intensity };\r\n      const result = await createProduct(product);\r\n\r\n      // Si todo salió bien, limpiamos el formulario y mostramos un mensaje de éxito\r\n      setName('');\r\n      setFragance('')\r\n      setDescription('');\r\n      setPrice('');\r\n      setImage(null);\r\n      setImage1(null);\r\n      setIntensity(1);\r\n      alert('Producto creado con éxito!');\r\n      console.log(result);\r\n    } catch (err) {\r\n      setError('Error al crear el producto: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto p-6 bg-white border rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Crear Producto</h2>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n            Nombre del Producto\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"fragance\" className=\"block text-sm font-medium text-gray-700\">\r\n            Fragancia\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fragance\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={fragance}\r\n            onChange={(e) => setFragance(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\r\n            Descripción\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\r\n            Precio\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700\">\r\n            Imagen del Producto (Principal)\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"image1\" className=\"block text-sm font-medium text-gray-700\">\r\n            Imagen del Producto (Secundaria)\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image1\"\r\n            className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            onChange={handleImage1Change}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"intensity\" className=\"block text-sm font-medium text-gray-700\">\r\n            Intensidad (1 a 5)\r\n          </label>\r\n          <input\r\n            type=\"range\"\r\n            id=\"intensity\"\r\n            min=\"1\"\r\n            max=\"5\"\r\n            value={intensity}\r\n            onChange={handleIntensityChange}\r\n            className=\"w-full\"\r\n          />\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n            <span>4</span>\r\n            <span>5</span>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Cargando...' : 'Publicar Producto'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}