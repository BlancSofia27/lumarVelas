{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/api.js"],"sourcesContent":["const api = {\r\n  user: {\r\n    async fetch() {\r\n      // Implementa tu lógica aquí\r\n      // Por ejemplo, hacer una solicitud a tu backend para obtener los datos del usuario\r\n      const response = await fetch(`${process.env.APP_URL}/api/user`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.NEXT_PUBLIC_MP_CLIENT_ID}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al obtener los datos del usuario\");\r\n      }\r\n\r\n      return await response.json();\r\n    },\r\n\r\n    async authorize() {\r\n      // Obtenemos la url de autorización\r\n      const url = new OAuth(mercadopago).getAuthorizationURL({\r\n        options: {\r\n          client_id: process.env.NEXT_PUBLIC_MP_CLIENT_ID,\r\n          redirect_uri: `${process.env.APP_URL}/api/mercadopago`,\r\n        },\r\n      });\r\n\r\n      // Devolvemos la url\r\n      return url;\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM;IACV,MAAM;QACJ,MAAM;YACJ,4BAA4B;YAC5B,mFAAmF;YACnF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAC9D,QAAQ;gBACR,SAAS;oBACP,eAAe,CAAC,OAAO,sDAAwC;gBACjE;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,MAAM,SAAS,IAAI;QAC5B;QAEA,MAAM;YACJ,mCAAmC;YACnC,MAAM,MAAM,IAAI,MAAM,aAAa,mBAAmB,CAAC;gBACrD,SAAS;oBACP,SAAS;oBACT,cAAc,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBACxD;YACF;YAEA,oBAAoB;YACpB,OAAO;QACT;IACF;AACF;uCAEe"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/user/paymentResume/page.jsx"],"sourcesContent":["import api from \"@/utils/api\";\r\n\r\nexport default async function PaymentResumePage() {\r\n  try {\r\n    const user = await api.user.fetch(); // Llamada a la función fetch\r\n    const authorizationUrl = await api.user.authorize();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Resumen de Pago</h1>\r\n        <p>Bienvenido, {user.name}</p>\r\n        <a href={authorizationUrl}>Autorizar con MercadoPago</a>\r\n      </div>\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error al cargar los datos:\", error);\r\n    return <p>Hubo un error al cargar los datos. Por favor, intenta de nuevo.</p>;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,OAAO,MAAM,4GAAA,CAAA,UAAG,CAAC,IAAI,CAAC,KAAK,IAAI,6BAA6B;QAClE,MAAM,mBAAmB,MAAM,4GAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS;QAEjD,qBACE,8OAAC;;8BACC,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;;wBAAE;wBAAa,KAAK,IAAI;;;;;;;8BACzB,8OAAC;oBAAE,MAAM;8BAAkB;;;;;;;;;;;;IAGjC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,qBAAO,8OAAC;sBAAE;;;;;;IACZ;AACF"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}