{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_ANON_KEY;\r\n\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Supabase URL and Key are required');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAGN,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/fragancesTable.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../utils/supabaseClient\"; // Importa el cliente de Supabase\r\nimport Swal from \"sweetalert2\"; // Importa SweetAlert2\r\n\r\nconst FraganceTable = () => {\r\n  const [Fragances, setFragances] = useState([]); // Para almacenar las fragancias\r\n  const [loading, setLoading] = useState(true); // Para mostrar un estado de carga\r\n\r\n  // Cargar las fragancias desde Supabase\r\n  const fetchFragances = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase.from(\"fragances\").select(\"*\"); // Reemplaza 'Fragances' con el nombre de tu tabla\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setFragances(data); // Guarda las fragancias en el estado\r\n    } catch (error) {\r\n      console.error(\"Error al obtener las fragancias:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cargar las fragancias al montar el componente\r\n  useEffect(() => {\r\n    fetchFragances();\r\n  }, []);\r\n\r\n  // Función de eliminación\r\n  const handleDelete = async (FraganceId) => {\r\n    try {\r\n      // Confirmar eliminación usando SweetAlert2\r\n      const result = await Swal.fire({\r\n        title: \"¿Estás seguro?\",\r\n        text: \"¡Este fragancia se eliminará permanentemente!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Sí, eliminar\",\r\n        cancelButtonText: \"Cancelar\",\r\n      });\r\n\r\n      if (result.isConfirmed) {\r\n        // Eliminar la fragancia de Supabase\r\n        const { error } = await supabase.from(\"Fragances\").delete().eq(\"id\", FraganceId);\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        // Refrescar las fragancias después de eliminar\r\n        Swal.fire(\"¡Eliminado!\", \"La fragancia ha sido eliminada.\", \"success\");\r\n        fetchFragances(); // Volver a cargar las fragancias después de la eliminación\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al eliminar la fragancia:\", error);\r\n      Swal.fire(\"Error\", \"Hubo un problema al eliminar la fragancia.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 mt-4\">\r\n\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        {/* Tabla */}\r\n        <div className=\"w-full border border-gray-300 rounded-lg\">\r\n          <div className=\"flex bg-gray-100 p-3\">\r\n            <div className=\"w-2/6 font-semibold text-center\">Nombre</div>\r\n            <div className=\"w-2/6 font-semibold text-center\">Descripción</div>\r\n            <div className=\"w-1/6 font-semibold text-center\">Intensidad</div>\r\n            <div className=\"w-1/6 font-semibold text-center\">Color</div>\r\n            <div className=\"w-1/6 font-semibold text-center\">Acciones</div>\r\n          </div>\r\n\r\n          {/* Mapeo de Fraganceos */}\r\n          {loading ? (\r\n            <div className=\"flex justify-center items-center py-6\">\r\n              <span>Cargando...</span>\r\n            </div>\r\n          ) : (\r\n            Fragances.map((Fragance) => (\r\n              <div\r\n                key={Fragance.id}\r\n                className=\"flex items-center border-t border-gray-200\"\r\n              >\r\n                <div className=\"w-2/6 text-center\">{Fragance.name}</div>\r\n                <div className=\"w-2/6 text-center\">{Fragance.description}</div>\r\n                <div className=\"w-1/6 text-center\">{Fragance.intensity}</div>\r\n                <div className=\"w-1/6 text-center\">\r\n                  {/* Mostrar color como un círculo */}\r\n                  <div\r\n                    className=\"w-8 h-8 rounded-full mx-auto\"\r\n                    style={{ backgroundColor: Fragance.color }}\r\n                  ></div>\r\n                </div>\r\n\r\n                <div className=\"w-1/6 text-center\">\r\n                  {/* Botón de eliminar */}\r\n                  <button\r\n                    onClick={() => handleDelete(Fragance.id)}\r\n                    className=\"bg-red-500 text-white p-2 rounded-lg ml-2 hover:bg-red-600\"\r\n                  >\r\n                    Eliminar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FraganceTable;\r\n"],"names":[],"mappings":";;;;AACA;AACA,gNAAuD,iCAAiC;AACxF,sRAAgC,sBAAsB;AAHtD;;;;;AAKA,MAAM,gBAAgB;IACpB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,GAAG,gCAAgC;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,kCAAkC;IAEhF,uCAAuC;IACvC,MAAM,iBAAiB;QACrB,IAAI;YACF,WAAW;YACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,aAAa,MAAM,CAAC,MAAM,kDAAkD;YAExH,IAAI,OAAO;gBACT,MAAM;YACR;YAEA,aAAa,OAAO,qCAAqC;QAC3D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;QACpD,SAAU;YACR,WAAW;QACb;IACF;IAEA,gDAAgD;IAChD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,yBAAyB;IACzB,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,2CAA2C;YAC3C,MAAM,SAAS,MAAM,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC;gBAC7B,OAAO;gBACP,MAAM;gBACN,MAAM;gBACN,kBAAkB;gBAClB,mBAAmB;gBACnB,kBAAkB;YACpB;YAEA,IAAI,OAAO,WAAW,EAAE;gBACtB,oCAAoC;gBACpC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,aAAa,MAAM,GAAG,EAAE,CAAC,MAAM;gBAErE,IAAI,OAAO;oBACT,MAAM;gBACR;gBAEA,+CAA+C;gBAC/C,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC,eAAe,mCAAmC;gBAC5D,kBAAkB,2DAA2D;YAC/E;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YACjD,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC,SAAS,8CAA8C;QACnE;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBAEb,cAAA,8OAAC;YAAI,WAAU;sBAEb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;0CACjD,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;0CACjD,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;0CACjD,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;0CACjD,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;;;;;;;oBAIlD,wBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;sCAAK;;;;;;;;;;+BAGR,UAAU,GAAG,CAAC,CAAC,yBACb,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCAAI,WAAU;8CAAqB,SAAS,IAAI;;;;;;8CACjD,8OAAC;oCAAI,WAAU;8CAAqB,SAAS,WAAW;;;;;;8CACxD,8OAAC;oCAAI,WAAU;8CAAqB,SAAS,SAAS;;;;;;8CACtD,8OAAC;oCAAI,WAAU;8CAEb,cAAA,8OAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,iBAAiB,SAAS,KAAK;wCAAC;;;;;;;;;;;8CAI7C,8OAAC;oCAAI,WAAU;8CAEb,cAAA,8OAAC;wCACC,SAAS,IAAM,aAAa,SAAS,EAAE;wCACvC,WAAU;kDACX;;;;;;;;;;;;2BAnBE,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;AA8BhC;uCAEe"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}