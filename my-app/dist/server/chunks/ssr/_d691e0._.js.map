{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\" rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/fileUpload.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst FileUpload = ({ onFileSelect }: { onFileSelect: (e: ChangeEvent<HTMLInputElement>) => void }) => {\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      {/* Input HTML estándar */}\r\n      <input\r\n        accept=\"image/*\"\r\n        type=\"file\"\r\n        id=\"file-upload\"\r\n        onChange={onFileSelect}\r\n        style={{ display: 'none' }}  // Ocultar el input real\r\n      />\r\n      {/* Label para hacer clic y activar el input */}\r\n      <label htmlFor=\"file-upload\">\r\n        <Button variant=\"contained\" component=\"span\">\r\n          Subir Imagen\r\n        </Button>\r\n      </label>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;;;AAEA,MAAM,aAAa,CAAC,EAAE,YAAY,EAAgE;IAChG,qBACE,8OAAC,iLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,WAAW;QAAS;;0BAE7B,8OAAC;gBACC,QAAO;gBACP,MAAK;gBACL,IAAG;gBACH,UAAU;gBACV,OAAO;oBAAE,SAAS;gBAAO;;;;;;0BAG3B,8OAAC;gBAAM,SAAQ;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,WAAU;8BAAO;;;;;;;;;;;;;;;;;AAMrD;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/utils/supabaseServices.js"],"sourcesContent":["// supabaseService.js\r\nimport supabase from '../utils/supabaseClient';\r\n\r\n// Función para subir una imagen a Supabase Storage\r\nconst uploadImage = async (image, fieldName) => {\r\n  if (image) {\r\n    const { data, error } = await supabase.storage\r\n      .from('productos')\r\n      .upload(`images/${Date.now()}_${fieldName}.jpg`, image, {\r\n        contentType: 'image/jpeg',\r\n      });\r\n    if (error) throw error;\r\n    return data.path;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Función para crear un producto\r\nexport const createProduct = async (product) => {\r\n  try {\r\n    // Subir imágenes\r\n    const imagePath = await uploadImage(product.image, 'imagen');\r\n    const image1Path = await uploadImage(product.image1, 'imagen1');\r\n    const image2Path = await uploadImage(product.image2, 'imagen2');\r\n\r\n    // Insertar producto en la base de datos\r\n    const { data, error } = await supabase\r\n      .from('productos')\r\n      .insert([\r\n        {\r\n          nombre: product.name,\r\n          descripcion: product.description || '',\r\n          precio: parseFloat(product.price) || null,\r\n          fragancia: product.fragancia,\r\n          intensidad: product.intensidad,\r\n          imagen: imagePath,\r\n          imagen1: image1Path,\r\n          imagen2: image2Path,\r\n        },\r\n      ]);\r\n\r\n    if (error) throw error;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Error al crear el producto: ' + error.message);\r\n  }\r\n};\r\n\r\n// Función para obtener productos (puedes modificar esto según lo necesites)\r\nexport const getProducts = async () => {\r\n  try {\r\n    const { data, error } = await supabase.from('productos').select('*');\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Error al obtener productos: ' + error.message);\r\n  }\r\n};\r\n\r\n// Función para obtener un producto por ID\r\nexport const getProductById = async (id) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('productos')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Error al obtener el producto: ' + error.message);\r\n  }\r\n};\r\n\r\n// Función para actualizar un producto\r\nexport const updateProduct = async (id, product) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('productos')\r\n      .update({\r\n        nombre: product.name,\r\n        descripcion: product.description || '',\r\n        precio: parseFloat(product.price) || null,\r\n        fragancia: product.fragancia,\r\n        intensidad: product.intensidad,\r\n        imagen: product.image || null,\r\n        imagen1: product.image1 || null,\r\n        imagen2: product.image2 || null,\r\n      })\r\n      .eq('id', id);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Error al actualizar el producto: ' + error.message);\r\n  }\r\n};\r\n\r\n// Función para eliminar un producto\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const { data, error } = await supabase.from('productos').delete().eq('id', id);\r\n    if (error) throw error;\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Error al eliminar el producto: ' + error.message);\r\n  }\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport { Paper, TextField, Button, Grid, Typography } from '@mui/material';\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\"; // Ícono de corazón de Lucide\r\nimport FileUpload from './fileUpload';\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { createProduct } from '../../utils/supabaseServices'; // Importamos la función para crear productos\r\n\r\nconst ProductPublish = () => {\r\n  // Estado para controlar los datos del formulario\r\n  const [product, setProduct] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    fragancia: '',\r\n    intensidad: 1,\r\n    image: '',\r\n    image1: '',\r\n    image2: '',\r\n  });\r\n\r\n  // Función para actualizar el estado del formulario\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Función para manejar la carga de las imágenes\r\n  const handleImageUpload = (e, imageField) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProduct((prev) => ({\r\n          ...prev,\r\n          [imageField]: reader.result,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Función para manejar la publicación del producto\r\n  const handlePublish = async () => {\r\n    try {\r\n      const productData = await createProduct(product);\r\n      toast.success('Producto publicado con éxito!');\r\n    } catch (error) {\r\n      toast.error('Error al publicar el producto: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} className=\"p-8\">\r\n      <ToastContainer position=\"bottom-right\" />\r\n      <Grid item xs={12} md={8}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Publicar un Producto</Typography>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nombre del Producto\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Descripción\"\r\n            name=\"description\"\r\n            value={product.description}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Precio\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Fragancia\"\r\n            name=\"fragancia\"\r\n            value={product.fragancia}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Intensidad (1-5)\"\r\n            name=\"intensidad\"\r\n            type=\"number\"\r\n            value={product.intensidad}\r\n            onChange={handleInputChange}\r\n            inputProps={{ min: 1, max: 5 }}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          {/* Subir imágenes */}\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image')} label=\"Imagen principal\" />\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image1')} label=\"Imagen secundaria 1\" />\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image2')} label=\"Imagen secundaria 2\" />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ marginTop: 2 }}\r\n            onClick={handlePublish}\r\n          >\r\n            Publicar Producto\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPublish;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}