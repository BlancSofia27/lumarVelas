{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\" rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/fileUpload.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst FileUpload = ({ onFileSelect }: { onFileSelect: (e: ChangeEvent<HTMLInputElement>) => void }) => {\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      {/* Input HTML estándar */}\r\n      <input\r\n        accept=\"image/*\"\r\n        type=\"file\"\r\n        id=\"file-upload\"\r\n        onChange={onFileSelect}\r\n        style={{ display: 'none' }}  // Ocultar el input real\r\n      />\r\n      {/* Label para hacer clic y activar el input */}\r\n      <label htmlFor=\"file-upload\">\r\n        <Button variant=\"contained\" component=\"span\">\r\n          Subir Imagen\r\n        </Button>\r\n      </label>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;;;AAEA,MAAM,aAAa,CAAC,EAAE,YAAY,EAAgE;IAChG,qBACE,8OAAC,iLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,WAAW;QAAS;;0BAE7B,8OAAC;gBACC,QAAO;gBACP,MAAK;gBACL,IAAG;gBACH,UAAU;gBACV,OAAO;oBAAE,SAAS;gBAAO;;;;;;0BAG3B,8OAAC;gBAAM,SAAQ;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,WAAU;8BAAO;;;;;;;;;;;;;;;;;AAMrD;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/Admin/formProduct.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport { Paper, TextField, Button, Grid, Typography } from '@mui/material';\r\nimport Image from 'next/image'; // Si estás usando Next.js, puedes usar el componente Image de Next.js\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\"; // Ícono de corazón de Lucide\r\nimport FileUpload from './fileUpload';\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from 'sweetalert2'; // Importa SweetAlert2\r\nimport { supabase } from '../../utils/supabaseClient'; // Asegúrate de tener la configuración correcta de Supabase\r\n\r\nconst ProductPublish = () => {\r\n  // Estado para controlar los datos del formulario\r\n  const [product, setProduct] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    image: '',\r\n    image1: '',\r\n    image2: '',\r\n    fragancia: '',\r\n    intensidad: 1,\r\n  });\r\n\r\n  // Función para actualizar el estado del formulario\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Función para manejar la carga de la imagen\r\n  const handleImageUpload = (e, imageType) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProduct((prev) => ({\r\n          ...prev,\r\n          [imageType]: reader.result,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file); // Cargar la imagen como una URL de datos\r\n    }\r\n  };\r\n\r\n  // Función para manejar la carga de las imágenes en Supabase Storage\r\n  const uploadImage = async (file, path) => {\r\n    if (!file) return null;\r\n    const { data, error } = await supabase.storage.from('productos').upload(path, file);\r\n    if (error) {\r\n      console.error('Error al subir la imagen:', error);\r\n      return null;\r\n    }\r\n    return data?.path;\r\n  };\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handlePublish = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Subir las imágenes a Supabase Storage\r\n    const imagenUrl = await uploadImage(product.image, `imagen-${Date.now()}`);\r\n    const imagen1Url = await uploadImage(product.image1, `imagen1-${Date.now()}`);\r\n    const imagen2Url = await uploadImage(product.image2, `imagen2-${Date.now()}`);\r\n\r\n    // Insertar producto en la base de datos\r\n    const { data, error } = await supabase\r\n      .from('productos')\r\n      .insert([\r\n        {\r\n          name: product.name,\r\n          description: product.description,\r\n          price: product.price,\r\n          fragancia: product.fragancia,\r\n          intensidad: product.intensidad,\r\n          imagen: imagenUrl,\r\n          imagen1: imagen1Url,\r\n          imagen2: imagen2Url,\r\n        }\r\n      ]);\r\n\r\n    if (error) {\r\n      console.error('Error al insertar el producto:', error);\r\n      // Mostrar alerta de error\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Hubo un error al cargar el producto.',\r\n      });\r\n    } else {\r\n      // Mostrar alerta de éxito\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: '¡Producto cargado!',\r\n        text: 'El producto se ha cargado exitosamente.',\r\n      });\r\n\r\n      // Limpiar los campos del formulario\r\n      setProduct({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        image: '',\r\n        image1: '',\r\n        image2: '',\r\n        fragancia: '',\r\n        intensidad: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} className=\"p-8\">\r\n      <ToastContainer position=\"bottom-right\" />\r\n      {/* Columna izquierda con el formulario */}\r\n      <Grid item xs={12} md={8}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Publicar un Producto</Typography>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nombre del Producto\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Descripción\"\r\n            name=\"description\"\r\n            value={product.description}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Precio\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Fragancia\"\r\n            name=\"fragancia\"\r\n            value={product.fragancia}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Intensidad (1-5)\"\r\n            name=\"intensidad\"\r\n            value={product.intensidad}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n            type=\"number\"\r\n            min=\"1\"\r\n            max=\"5\"\r\n          />\r\n\r\n          {/* Componente para seleccionar archivo */}\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image')} label=\"Imagen Principal\" />\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image1')} label=\"Imagen 1\" />\r\n          <FileUpload onFileSelect={(e) => handleImageUpload(e, 'image2')} label=\"Imagen 2\" />\r\n\r\n          {/* Botón para enviar el formulario */}\r\n          <Button variant=\"contained\" color=\"primary\" sx={{ marginTop: 2 }} onClick={handlePublish}>\r\n            Publicar Producto\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {/* Columna derecha con la tarjeta de vista previa */}\r\n      <Grid item xs={12} md={4}>\r\n        <Paper sx={{ padding: 2 }}>\r\n          <Typography variant=\"h6\">Vista Previa</Typography>\r\n\r\n          {/* Vista previa con el modelo de Card */}\r\n          <Skeleton key={product.name} className=\"bg-white\">\r\n            <div className=\"relative flex flex-col items-center cursor-pointer\">\r\n              {/* Ícono de corazón con hover */}\r\n              <div className=\"absolute top-2 right-2 p-1 rounded-full\">\r\n                <Heart className=\"text-black w-6 h-6 hover:fill-black hover:text-black transition-all\" />\r\n              </div>\r\n\r\n              {/* Imagen del producto */}\r\n              {product.image ? (\r\n                <Image\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  width={400}\r\n                  height={450}\r\n                  className=\"w-full rounded-md object-cover\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full h-56 bg-gray-300 rounded-md\" />\r\n              )}\r\n\r\n              {/* Texto centrado */}\r\n              <h3 className=\"mt-4 text-lg font-semibold text-center\">{product.name || 'Nombre del Producto'}</h3>\r\n              <p className=\"text-sm text-muted-foreground text-center\">{product.description || 'Descripción del producto...'}</p>\r\n              <span className=\"text-md font-bold text-center\">${product.price || 'Precio'}</span>\r\n\r\n              {/* Botón de añadir al carrito */}\r\n              <button\r\n                onClick={() => handlePublish()}\r\n                className=\"mt-2 px-4 py-2 bg-black text-white rounded-lg\"\r\n              >\r\n                Añadir al carrito\r\n              </button>\r\n            </div>\r\n          </Skeleton>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPublish;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}