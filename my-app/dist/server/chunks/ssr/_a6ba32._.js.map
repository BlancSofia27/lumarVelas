{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\" rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/products.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Heart } from \"lucide-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"next/navigation\"; // Importa el hook useRouter\r\nimport { addItemToCart } from \"@/store/cartSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { supabase } from \"../utils/supabaseClient\";\r\n\r\nconst VelasGrid = ({ filters = {} }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const router = useRouter(); // Inicializa el router\r\n\r\n  // Función para cargar los productos desde Supabase\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"products\")\r\n        .select(\"*\");\r\n\r\n      if (error) throw error;\r\n\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener productos de Supabase:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Filtrar productos basados en los filtros pasados como props\r\n  const filteredProducts = products.filter((producto) => {\r\n    let isMatch = true;\r\n    if (filters.categoria) {\r\n      isMatch = isMatch && producto.categoria === filters.categoria;\r\n    }\r\n    if (filters.name) {\r\n      isMatch =\r\n        isMatch &&\r\n        producto.name.toLowerCase().includes(filters.name.toLowerCase());\r\n    }\r\n    return isMatch;\r\n  });\r\n\r\n  const handleAddToCart = (producto) => {\r\n    dispatch(\r\n      addItemToCart({\r\n        id: producto.id,\r\n        name: producto.name,\r\n        price: producto.price,\r\n        img: producto.image_url,\r\n        quantity: 1,\r\n      })\r\n    );\r\n    toast.success(`${producto.name} añadido al carrito`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 text-zinc-900 py-4\">\r\n      {filteredProducts.map((producto) => (\r\n        <Skeleton\r\n          key={producto.id}\r\n          className=\"bg-white\"\r\n          title={producto.name}\r\n          onClick={() => router.push(`/user/products/${producto.id}`)} // Redirige al detalle\r\n        >\r\n          <div className=\"relative flex flex-col items-center cursor-pointer\">\r\n            {/* Ícono de corazón con hover */}\r\n            <div className=\"absolute top-2 right-2 p-1 rounded-full z-10\">\r\n              <Heart className=\"text-zinc-900 w-6 h-6 hover:fill-zinc-900 hover:text-zinc-900 transition-all\" />\r\n            </div>\r\n\r\n            {/* Imagen del producto */}\r\n            <div className=\"w-full relative group\">\r\n              <Image\r\n                src={producto.image_url}\r\n                alt={producto.name}\r\n                width={400}\r\n                height={600}\r\n                className=\"w-full h-[300px] md:h-[350px] lg:h-[400px] rounded-md object-cover transition-opacity duration-300 group-hover:opacity-0\"\r\n              />\r\n              <Image\r\n                src={producto.image1_url}\r\n                alt={producto.name}\r\n                width={400}\r\n                height={600}\r\n                className=\"w-full h-[300px] md:h-[350px] lg:h-[400px] rounded-md object-cover absolute top-0 left-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\r\n              />\r\n            </div>\r\n\r\n            {/* Texto centrado */}\r\n            <h3 className=\"mt-4 text-lg font-semibold text-center\">\r\n              {producto.name}\r\n            </h3>\r\n            <p className=\"text-sm text-center\">{producto.description}</p>\r\n            <span className=\"text-md font-bold text-center\">\r\n              ${producto.price}\r\n            </span>\r\n\r\n           \r\n\r\n            {/* Botón de añadir al carrito */}\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation(); // Evita que el clic en el botón también active la redirección\r\n                handleAddToCart(producto);\r\n              }}\r\n              className=\"mt-2 px-4 py-2 bg-black text-white rounded-lg\"\r\n            >\r\n              Añadir al carrito\r\n            </button>\r\n          </div>\r\n        </Skeleton>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VelasGrid;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAGA,mOAA6C,4BAA4B;AACzE;AACA;AACA;AAJA;AADA;AALA;;;;;;;;;;;AAYA,MAAM,YAAY,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,uBAAuB;IAEnD,mDAAmD;IACnD,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC;YAEV,IAAI,OAAO,MAAM;YAEjB,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;QAC3D;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,8DAA8D;IAC9D,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAC;QACxC,IAAI,UAAU;QACd,IAAI,QAAQ,SAAS,EAAE;YACrB,UAAU,WAAW,SAAS,SAAS,KAAK,QAAQ,SAAS;QAC/D;QACA,IAAI,QAAQ,IAAI,EAAE;YAChB,UACE,WACA,SAAS,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,IAAI,CAAC,WAAW;QACjE;QACA,OAAO;IACT;IAEA,MAAM,kBAAkB,CAAC;QACvB,SACE,CAAA,GAAA,kHAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,IAAI,SAAS,EAAE;YACf,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,KAAK;YACrB,KAAK,SAAS,SAAS;YACvB,UAAU;QACZ;QAEF,sKAAA,CAAA,QAAK,CAAC,OAAO,CAAC,GAAG,SAAS,IAAI,CAAC,mBAAmB,CAAC;IACrD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,iBAAiB,GAAG,CAAC,CAAC,yBACrB,8OAAC,6HAAA,CAAA,WAAQ;gBAEP,WAAU;gBACV,OAAO,SAAS,IAAI;gBACpB,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,eAAe,EAAE,SAAS,EAAE,EAAE;0BAE1D,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;;;;;sCAInB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAK,SAAS,SAAS;oCACvB,KAAK,SAAS,IAAI;oCAClB,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAK,SAAS,UAAU;oCACxB,KAAK,SAAS,IAAI;oCAClB,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;;;;;;;sCAKd,8OAAC;4BAAG,WAAU;sCACX,SAAS,IAAI;;;;;;sCAEhB,8OAAC;4BAAE,WAAU;sCAAuB,SAAS,WAAW;;;;;;sCACxD,8OAAC;4BAAK,WAAU;;gCAAgC;gCAC5C,SAAS,KAAK;;;;;;;sCAMlB,8OAAC;4BACC,SAAS,CAAC;gCACR,EAAE,eAAe,IAAI,8DAA8D;gCACnF,gBAAgB;4BAClB;4BACA,WAAU;sCACX;;;;;;;;;;;;eA/CE,SAAS,EAAE;;;;;;;;;;AAuD1B;uCAEe"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}