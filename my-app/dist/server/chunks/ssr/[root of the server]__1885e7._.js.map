{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/api.js"],"sourcesContent":["import { MercadoPagoConfig, Preference, OAuth } from \"mercadopago\";\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Crea el cliente de Supabase\r\nconst supabase = createClient(process.env.NEXT_PUBLIC_SALE_SUPABASE_URL, process.env.NEXT_PUBLIC_SALE_SUPABASE_SERVICE_ROLE);\r\n\r\n// Configuración de Mercado Pago\r\nexport const mercadopago = new MercadoPagoConfig({ accessToken: process.env.MP_ACCESS_TOKEN });\r\n\r\nconst api = {\r\n  user: {\r\n    async fetch() {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', process.env.USER_ID)  // Aquí usamos el ID del usuario\r\n        .single();\r\n\r\n      if (error) {\r\n        throw new Error('Error al obtener el usuario: ' + error.message);\r\n      }\r\n\r\n      return data;\r\n    },\r\n  },\r\n\r\n  sale: {\r\n    async create({ userId, items, totalAmount }) {\r\n      // Creamos la preferencia de pago en MercadoPago con los artículos del carrito\r\n      const preference = await new Preference(mercadopago).create({\r\n        body: {\r\n          items: items.map(item => ({\r\n            id: item.id,\r\n            title: item.name, // Título del producto\r\n            quantity: item.quantity,\r\n            unit_price: item.price, // Precio por unidad\r\n          })),\r\n          marketplace_fee: 5,  // Tarifa de Mercado Pago\r\n        },\r\n      });\r\n\r\n      // Crear un registro en la base de datos de Supabase para la venta\r\n      const { data, error } = await supabase\r\n        .from('sales')\r\n        .insert([{\r\n          sale_id: preference.id,  // ID de la compra generada por MercadoPago\r\n          user_id: userId,\r\n          amount: totalAmount,\r\n          status: 'pendiente',  // Estado inicial de la venta\r\n          items: items,  // Detalles de los productos comprados\r\n        }]);\r\n\r\n      if (error) {\r\n        throw new Error('Error al registrar la venta: ' + error.message);\r\n      }\r\n\r\n      // Devolvemos la URL para que el usuario complete el pago\r\n      return { init_point: preference.init_point, sale: data };\r\n    },\r\n\r\n    async updateStatus(saleId, status) {\r\n      // Actualiza el estado de la venta en Supabase cuando se complete el pago\r\n      const { data, error } = await supabase\r\n        .from('sales')\r\n        .update({ status })\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) {\r\n        throw new Error('Error al actualizar el estado de la venta: ' + error.message);\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    async getSaleDetails(saleId) {\r\n      // Recupera los detalles de la venta desde la base de datos\r\n      const { data, error } = await supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .eq('sale_id', saleId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw new Error('Error al obtener los detalles de la venta: ' + error.message);\r\n      }\r\n\r\n      return data;\r\n    },\r\n  },\r\n\r\n  message: {\r\n    async submit(text) {\r\n      // Creamos la preferencia de Mercado Pago con el mensaje de la venta\r\n      const preference = await new Preference(mercadopago).create({\r\n        body: {\r\n          items: [\r\n            {\r\n              id: \"message\",\r\n              unit_price: 100,\r\n              quantity: 1,\r\n              title: \"Mensaje de muro\",\r\n            },\r\n          ],\r\n          metadata: {\r\n            text,\r\n          },\r\n          marketplace_fee: 5,  // Tarifa de Mercado Pago\r\n        },\r\n      });\r\n\r\n      // Devolvemos la URL para que el usuario complete el pago\r\n      return preference.init_point;\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,8BAA8B;AAC9B,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD;AAGrB,MAAM,cAAc,IAAI,4IAAA,CAAA,oBAAiB,CAAC;IAAE,aAAa,QAAQ,GAAG,CAAC,eAAe;AAAC;AAE5F,MAAM,MAAM;IACV,MAAM;QACJ,MAAM;YACJ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAG,gCAAgC;aAC/D,MAAM;YAET,IAAI,OAAO;gBACT,MAAM,IAAI,MAAM,kCAAkC,MAAM,OAAO;YACjE;YAEA,OAAO;QACT;IACF;IAEA,MAAM;QACJ,MAAM,QAAO,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE;YACzC,8EAA8E;YAC9E,MAAM,aAAa,MAAM,IAAI,4IAAA,CAAA,aAAU,CAAC,aAAa,MAAM,CAAC;gBAC1D,MAAM;oBACJ,OAAO,MAAM,GAAG,CAAC,CAAA,OAAQ,CAAC;4BACxB,IAAI,KAAK,EAAE;4BACX,OAAO,KAAK,IAAI;4BAChB,UAAU,KAAK,QAAQ;4BACvB,YAAY,KAAK,KAAK;wBACxB,CAAC;oBACD,iBAAiB;gBACnB;YACF;YAEA,kEAAkE;YAClE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC;gBAAC;oBACP,SAAS,WAAW,EAAE;oBACtB,SAAS;oBACT,QAAQ;oBACR,QAAQ;oBACR,OAAO;gBACT;aAAE;YAEJ,IAAI,OAAO;gBACT,MAAM,IAAI,MAAM,kCAAkC,MAAM,OAAO;YACjE;YAEA,yDAAyD;YACzD,OAAO;gBAAE,YAAY,WAAW,UAAU;gBAAE,MAAM;YAAK;QACzD;QAEA,MAAM,cAAa,MAAM,EAAE,MAAM;YAC/B,yEAAyE;YACzE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC;gBAAE;YAAO,GAChB,EAAE,CAAC,WAAW;YAEjB,IAAI,OAAO;gBACT,MAAM,IAAI,MAAM,gDAAgD,MAAM,OAAO;YAC/E;YAEA,OAAO;QACT;QAEA,MAAM,gBAAe,MAAM;YACzB,2DAA2D;YAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,QACd,MAAM;YAET,IAAI,OAAO;gBACT,MAAM,IAAI,MAAM,gDAAgD,MAAM,OAAO;YAC/E;YAEA,OAAO;QACT;IACF;IAEA,SAAS;QACP,MAAM,QAAO,IAAI;YACf,oEAAoE;YACpE,MAAM,aAAa,MAAM,IAAI,4IAAA,CAAA,aAAU,CAAC,aAAa,MAAM,CAAC;gBAC1D,MAAM;oBACJ,OAAO;wBACL;4BACE,IAAI;4BACJ,YAAY;4BACZ,UAAU;4BACV,OAAO;wBACT;qBACD;oBACD,UAAU;wBACR;oBACF;oBACA,iBAAiB;gBACnB;YACF;YAEA,yDAAyD;YACzD,OAAO,WAAW,UAAU;QAC9B;IACF;AACF;uCAEe"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/PurchaseResume.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\"; // Asumiendo que usas Redux para manejar el estado global\r\n\r\nconst PurchaseResume = () => {\r\n  // Accedemos al carrito del estado global\r\n  const cart = useSelector((state) => state.cart.items); // Ajusta según tu slice y estado\r\n  const totalAmount = cart.reduce((acc, item) => acc + item.price * item.quantity, 0); // Calculamos el total de la compra\r\n\r\n  return (\r\n    <section className=\"p-4 space-y-4\">\r\n      <h2 className=\"text-xl font-semibold\">Resumen de la compra</h2>\r\n      <ul className=\"space-y-4\">\r\n        {cart.map((item) => (\r\n          <li key={item.id} className=\"flex justify-between p-4 bg-gray-100 rounded-md\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <img src={item.img} alt={item.name} className=\"w-16 h-16 object-cover rounded-md\" />\r\n              <div>\r\n                <h3 className=\"font-semibold\">{item.name}</h3>\r\n                <p className=\"text-sm text-gray-500\">{item.fragance.join(\", \")}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span>{item.quantity} x ${item.price.toFixed(2)}</span>\r\n              <span className=\"font-semibold\">${(item.price * item.quantity).toFixed(2)}</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"flex justify-between font-semibold text-lg\">\r\n        <span>Total</span>\r\n        <span>${totalAmount.toFixed(2)}</span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PurchaseResume;\r\n"],"names":[],"mappings":";;;;AAAA;AACA,qPAA2C,yDAAyD;;;;AAEpG,MAAM,iBAAiB;IACrB,yCAAyC;IACzC,MAAM,OAAO,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI,CAAC,KAAK,GAAG,iCAAiC;IACxF,MAAM,cAAc,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE,IAAI,mCAAmC;IAExH,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,8OAAC;gBAAG,WAAU;0BACX,KAAK,GAAG,CAAC,CAAC,qBACT,8OAAC;wBAAiB,WAAU;;0CAC1B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,KAAK,KAAK,GAAG;wCAAE,KAAK,KAAK,IAAI;wCAAE,WAAU;;;;;;kDAC9C,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAiB,KAAK,IAAI;;;;;;0DACxC,8OAAC;gDAAE,WAAU;0DAAyB,KAAK,QAAQ,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;0CAG7D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;4CAAM,KAAK,QAAQ;4CAAC;4CAAK,KAAK,KAAK,CAAC,OAAO,CAAC;;;;;;;kDAC7C,8OAAC;wCAAK,WAAU;;4CAAgB;4CAAE,CAAC,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE,OAAO,CAAC;;;;;;;;;;;;;;uBAVlE,KAAK,EAAE;;;;;;;;;;0BAepB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAK;;;;;;kCACN,8OAAC;;4BAAK;4BAAE,YAAY,OAAO,CAAC;;;;;;;;;;;;;;;;;;;AAIpC;uCAEe"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/paymentResume/page.js"],"sourcesContent":["import { redirect } from \"next/navigation\";\r\nimport api from \"../../../api\";\r\nimport PurchaseResume from \"../../../components/PurchaseResume\"; // Suponiendo que ya tienes este componente\r\nimport { supabase } from \"../../../utils/supabaseClient\"; // Asegúrate de tener configurado supabase\r\n\r\nexport default async function ResumePage() {\r\n  // Obtener los datos del cliente desde la tabla 'clients'\r\n  const { data: client, error: clientError } = await supabase\r\n    .from(\"clients\")\r\n    .select(\"*\")\r\n    .eq(\"email\", \"cliente@example.com\") // Aquí pones el email o alguna otra forma de identificar al cliente\r\n    .single();\r\n\r\n  if (clientError) {\r\n    console.error(\"Error al obtener los datos del cliente: \", clientError.message);\r\n    return;\r\n  }\r\n\r\n  // Si el cliente ya ha autorizado MercadoPago, se muestra el formulario\r\n  const authorizationUrl = client.mp_user_id ? null : await api.user.authorize();\r\n\r\n  // Función para manejar el envío del mensaje\r\n  async function add(formData) {\r\n    \"use server\";\r\n\r\n    const message = formData.get(\"text\");\r\n\r\n    // Crear un registro de venta en Supabase\r\n    const { data, error } = await supabase\r\n      .from(\"sales\")\r\n      .insert([\r\n        {\r\n          client_id: client.id, // Usamos el id del cliente desde la tabla 'clients'\r\n          status: \"pending\", // Ajusta según tu flujo\r\n          message_text: message,\r\n        },\r\n      ]);\r\n\r\n    if (error) {\r\n      console.error(\"Error al registrar la compra: \", error.message);\r\n      return;\r\n    }\r\n\r\n    // Redirigir al usuario a la URL de pago si ya ha autorizado MercadoPago\r\n    if (client.mp_user_id) {\r\n      const url = await api.message.submit(message);\r\n      redirect(url);\r\n    } else {\r\n      console.error(\"El cliente no ha autorizado MercadoPago\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"grid gap-8\">\r\n      {/* Componente PurchaseResume con el resumen de la compra */}\r\n      <PurchaseResume />\r\n\r\n      {/* Si el cliente ya autorizó la integración, mostramos el formulario */}\r\n      {client.mp_user_id ? (\r\n        <form action={add} className=\"grid gap-2\">\r\n          <textarea\r\n            className=\"border-2 border-blue-400 p-2\"\r\n            name=\"text\"\r\n            placeholder=\"Escribe tu mensaje aquí\"\r\n            rows=\"3\"\r\n          />\r\n          <button className=\"rounded bg-blue-400 p-2\" type=\"submit\">\r\n            Enviar\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        // Si no autorizó la integración, mostramos un botón para redirigirlo a Mercado Pago a autorizar\r\n        <a className=\"rounded bg-blue-400 p-2 text-center\" href={authorizationUrl}>\r\n          Conectar Mercado Pago\r\n        </a>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA,4NAAiE,2CAA2C;AAC5G,gNAA0D,0CAA0C;AAHpG;;;;;;;;MAqBE,4CAA4C;AAC5C,wBAAA,eAAe,4BAAI,QAAQ;;IAGzB,MAAM,UAAU,SAAS,GAAG,CAAC;IAE7B,yCAAyC;IACzC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC;QACN;YACE,SAAS;YACT,QAAQ;YACR,cAAc;QAChB;KACD;IAEH,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,kCAAkC,MAAM,OAAO;QAC7D;IACF;IAEA,wEAAwE;IACxE,oBAAuB;QACrB,MAAM,MAAM,MAAM,mGAAA,CAAA,UAAG,CAAC,OAAO,CAAC,MAAM,CAAC;QACrC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,QAAQ,KAAK,CAAC;IAChB;AACF;AA7Ca,eAAe;IAC5B,yDAAyD;IACzD,MAAM,EAAE,MAAM,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,uHAAA,CAAA,WAAQ,CACxD,IAAI,CAAC,WACL,MAAM,CAAC,KACP,EAAE,CAAC,SAAS,uBAAuB,oEAAoE;KACvG,MAAM;IAET,IAAI,aAAa;QACf,QAAQ,KAAK,CAAC,4CAA4C,YAAY,OAAO;QAC7E;IACF;IAEA,uEAAuE;IACvE,MAAM,mBAAmB,OAAO,UAAU,GAAG,OAAO,MAAM,mGAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS;QAG7D,MAAf,+OAAA;;;;IA8BA,qBACE,8OAAC;QAAQ,WAAU;;0BAEjB,8OAAC,6HAAA,CAAA,UAAc;;;;;YAGd,OAAO,UAAU,iBAChB,8OAAC;gBAAK,QAAQ;gBAAK,WAAU;;kCAC3B,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,MAAK;;;;;;kCAEP,8OAAC;wBAAO,WAAU;wBAA0B,MAAK;kCAAS;;;;;;;;;;;uBAK5D,gGAAgG;0BAChG,8OAAC;gBAAE,WAAU;gBAAsC,MAAM;0BAAkB;;;;;;;;;;;;AAMnF"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}