{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/blanc/OneDrive/Escritorio/lumarVelas/my-app/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_ANON_KEY;\r\n\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Supabase URL and Key are required');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAGN,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/blanc/OneDrive/Escritorio/lumarVelas/my-app/app/api/paymentResume/page.js"],"sourcesContent":["\"use client\"; // Asegura que este componente maneja eventos en el cliente\r\nimport { useState } from \"react\";\r\nimport { useFormState } from \"react-dom\";\r\nimport { redirect } from \"next/navigation\";\r\nimport api from \"../../../api\";\r\n\r\nexport default function ResumePage() {\r\n  // Obtener los datos dinámicamente dentro del componente\r\n  const [user, setUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Cargar datos al montar el componente\r\n  useState(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const fetchedUser = await api.user.fetch();\r\n        const fetchedMessages = await api.message.list();\r\n        setUser(fetchedUser);\r\n        setMessages(fetchedMessages);\r\n      } catch (err) {\r\n        setError(\"Error al cargar los datos\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Función para manejar el envío del mensaje\r\n  async function add(formData) {\r\n    \"use server\";\r\n\r\n    try {\r\n      const message = formData.get(\"text\");\r\n      if (!message.trim()) {\r\n        throw new Error(\"El mensaje no puede estar vacío\");\r\n      }\r\n\r\n      console.log(\"Mensaje recibido:\", message);\r\n      const url = await api.message.submit(message);\r\n\r\n      if (!url) {\r\n        throw new Error(\"URL no generada correctamente\");\r\n      }\r\n\r\n      console.log(\"Redirigiendo a:\", url);\r\n      return Response.redirect(url);\r\n    } catch (error) {\r\n      console.error(\"Error en add():\", error);\r\n      return { error: error.message };\r\n    }\r\n  }\r\n\r\n  // Estado para el manejo del formulario\r\n  const [formState, formAction] = useFormState(add, { error: null });\r\n\r\n  if (loading) return <p>Cargando...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <section className=\"grid gap-8\">\r\n      {/* Si el usuario ya autorizó la integración, mostramos el formulario */}\r\n      {user?.marketplace ? (\r\n        <form action={formAction} className=\"grid gap-2\">\r\n          <textarea\r\n            className=\"border-2 border-blue-400 p-2\"\r\n            name=\"text\"\r\n            placeholder=\"Hola, escribe tu mensaje...\"\r\n            rows={3}\r\n          />\r\n          <button className=\"rounded bg-blue-400 p-2\" type=\"submit\">\r\n            Enviar\r\n          </button>\r\n          {formState?.error && (\r\n            <p className=\"text-red-500\">{formState.error}</p>\r\n          )}\r\n        </form>\r\n      ) : (\r\n        // Si no autorizó la integración, mostramos un botón para redirigirlo a Mercado Pago a autorizar\r\n        <a\r\n          className=\"rounded bg-blue-400 p-2 text-center\"\r\n          href={user?.authorizationUrl}\r\n        >\r\n          Conectar Mercado Pago\r\n        </a>\r\n      )}\r\n      <ul className=\"grid gap-2\">\r\n        {messages.map((message) => (\r\n          <li key={message.id} className=\"rounded bg-blue-400/10 p-4\">\r\n            {message.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA,cAAc,2DAA2D;;;;;AAM1D,SAAS;;IACtB,wDAAwD;IACxD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,uCAAuC;IACvC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;+BAAE;YACP,eAAe;gBACb,IAAI;oBACF,MAAM,cAAc,MAAM,sGAAA,CAAA,UAAG,CAAC,IAAI,CAAC,KAAK;oBACxC,MAAM,kBAAkB,MAAM,sGAAA,CAAA,UAAG,CAAC,OAAO,CAAC,IAAI;oBAC9C,QAAQ;oBACR,YAAY;gBACd,EAAE,OAAO,KAAK;oBACZ,SAAS;gBACX,SAAU;oBACR,WAAW;gBACb;YACF;YACA;QACF;8BAAG,EAAE;IAEL,4CAA4C;IAC5C,eAAe,IAAI,QAAQ;QACzB;QAEA,IAAI;YACF,MAAM,UAAU,SAAS,GAAG,CAAC;YAC7B,IAAI,CAAC,QAAQ,IAAI,IAAI;gBACnB,MAAM,IAAI,MAAM;YAClB;YAEA,QAAQ,GAAG,CAAC,qBAAqB;YACjC,MAAM,MAAM,MAAM,sGAAA,CAAA,UAAG,CAAC,OAAO,CAAC,MAAM,CAAC;YAErC,IAAI,CAAC,KAAK;gBACR,MAAM,IAAI,MAAM;YAClB;YAEA,QAAQ,GAAG,CAAC,mBAAmB;YAC/B,OAAO,SAAS,QAAQ,CAAC;QAC3B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO;gBAAE,OAAO,MAAM,OAAO;YAAC;QAChC;IACF;IAEA,uCAAuC;IACvC,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE,KAAK;QAAE,OAAO;IAAK;IAEhE,IAAI,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IACvB,IAAI,OAAO,qBAAO,6LAAC;;YAAE;YAAQ;;;;;;;IAE7B,qBACE,6LAAC;QAAQ,WAAU;;YAEhB,MAAM,4BACL,6LAAC;gBAAK,QAAQ;gBAAY,WAAU;;kCAClC,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,MAAM;;;;;;kCAER,6LAAC;wBAAO,WAAU;wBAA0B,MAAK;kCAAS;;;;;;oBAGzD,WAAW,uBACV,6LAAC;wBAAE,WAAU;kCAAgB,UAAU,KAAK;;;;;;;;;;;uBAIhD,gGAAgG;0BAChG,6LAAC;gBACC,WAAU;gBACV,MAAM,MAAM;0BACb;;;;;;0BAIH,6LAAC;gBAAG,WAAU;0BACX,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;wBAAoB,WAAU;kCAC5B,QAAQ,IAAI;uBADN,QAAQ,EAAE;;;;;;;;;;;;;;;;AAO7B;GA3FwB;;QAkDU,oKAAA,CAAA,eAAY;;;KAlDtB"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}